function [outImg] = swirlFilter(inImg, factor, ox, oy)

% Coordinates of the origin should be positive or zero
if ox<= 0 || oy<=0
    return
end


tic

% Read image
inputImage = imread(inImg);

[r,c,ch] = size(inputImage);

outImg = zeros(r, c, ch);

x = 0;
y = 0;

% for k = 1:ch
%     for i = 1:r
%         for j = 1:c
%             %for k = 1:ch
% 
%             radius = sqrt((i - ox)^2 + (j - oy)^2);
%             theta = (pi*radius)/factor;
% 
%             %x = (i - ox)*cos(theta) + (j - oy)*sin(theta) + ox;
%             x = cos(theta)*radius + ox;
%             %y = -(i - ox)*sin(theta) + (j - oy)*cos(theta) + oy;
%             y = sin(theta)*radius + oy;
% 
%             if x <= 0 
%                 x = 1;  
%             end
% 
%             if y <= 0 
%                 y = 1;  
%             end
% 
%             disp(ceil(x));
%             disp(ceil(y));
% 
%             outImg(i+1, j+1, k) = inImg(ceil(x)+1, ceil(y)+1, k);
% 
%         end
%     end
% end

for i = 0:ox - 1
    for j = 0:oy - 1
        radius = sqrt((i - ox)^2 + (j - oy)^2);
        theta = (pi*radius)/factor;
        x = (i - ox)*cos(theta) + (j - oy)*sin(theta) + ox;

    end
end

subplot(1,2,1), imshow(inImg);
subplot(1,2,2), imshow(uint8(outImg));

end